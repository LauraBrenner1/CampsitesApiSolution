// <auto-generated />
using System;
using CampsitesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampsitesApi.Migrations
{
    [DbContext(typeof(CampsiteDataContext))]
    [Migration("20220313180157_fixeddatetime")]
    partial class fixeddatetime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("CampsitesApi.Data.Site", b =>
                {
                    b.Property<string>("SiteId")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasElectricalHookup")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasWater")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLakeFront")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("SiteId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("CampsitesApi.Data.SiteBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("SiteBooking");
                });

            modelBuilder.Entity("CampsitesApi.Data.SiteBooking", b =>
                {
                    b.HasOne("CampsitesApi.Data.Site", null)
                        .WithMany("Bookings")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampsitesApi.Data.Site", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
